syntax = "proto3";

package slackMessaging;

service SlackMessaging {
  rpc GetChannelList (GetChannelListRequest) returns (GetChannelListReply) {}

  rpc GetChannelMessages (GetChannelMessagesRequest) returns (GetChannelMessagesReply) {}

  rpc SendMessage (SendMessageRequest) returns (SendMessageReply) {}
}

//Auth message
message Authentication {
  string token = 1; //auth string,for example user:password or Bearer XXXXX
  AuthenticationType type = 2;
}

//Auth types enum
enum AuthenticationType {
  BASIC = 0;
  OAUTH2 = 1;
}

// The request message
message GetChannelListRequest {
  Authentication auth = 2;
}

// The response message
message GetChannelListReply {
  string channels = 1;
  string err = 3;
}

// The request message
message GetChannelMessagesRequest {
  string channel = 1; //as Id
  string oldest = 2; //timestamp of oldest msg
  Authentication auth = 3;
}

// The response message
message GetChannelMessagesReply {
  string messages = 1;
  string timeStampOfLastMsg = 2;
  string err = 3;
}

// The request message
message SendMessageRequest {
  string channel = 1; //as Id
  string message = 2;
  string as_user = 3; //if false,message sender is bot
  Authentication auth = 4;
}

// The response message
message SendMessageReply {
  string status = 1;
  string err = 2;
}
